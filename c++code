class Solution{
    public:
    vector<string>an;
    void dfs(int i,int j,string s,vector<vector<int>>&vis,vector<vector<int>> &m, int n)
    {
           if(i<0||j<0||i>n-1||j>n-1||vis[i][j]||m[i][j]==0)
           return;
           
           if(i==n-1&&j==n-1)
           {
               an.push_back(s);
               return;
           }
           
          
               vis[i][j]=1;
               
               
              
                   
                   dfs(i-1,j,s+"U",vis,m,n);
                  
                   dfs(i+1,j,s+"D",vis,m,n);
          
                   dfs(i,j-1,s+"L",vis,m,n);
                 
                   dfs(i,j+1,s+"R",vis,m,n);
                
                 vis[i][j]=0;
               
              return;
           }
           
    
    vector<string> findPath(vector<vector<int>> &m, int n) {
     
      vector<vector<int>>vis(n,vector<int>(n,0));
            string g="";
                 dfs(0,0,g,vis,m,n);
       return an;
    }
};
